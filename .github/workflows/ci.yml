name: Build & Test (.NET + Testcontainers)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  server:
    name: Build & Test (.NET + Testcontainers)
    runs-on: ubuntu-latest

    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_NOLOGO: true
      COMPOSE_PROJECT_NAME: tempoforge
      TESTCONTAINERS_RYUK_DISABLED: "true"
      TESTCONTAINERS_HOST_OVERRIDE: localhost

    services:
      docker:
        image: docker:dind
        privileged: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test (with Testcontainers)
        run: dotnet test --configuration Release --no-build --logger "trx;LogFileName=test-results.trx"

      - name: Publish API
        run: dotnet publish server/TempoForge.Api/TempoForge.Api.csproj --configuration Release --no-build --output build/api

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: server-test-results
          path: "**/TestResults/*.trx"

      - name: Upload API publish output
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: api-publish
          path: build/api

  client:
    name: Build Client (React + Vite)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client/tempoforge-web

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: client/tempoforge-web/package-lock.json

      - name: Install deps
        run: npm ci

      - name: Typecheck
        run: npm run typecheck --if-present

      - name: Lint
        run: npm run lint --if-present

      - name: Build
        run: npm run build

      - name: Upload built site
        uses: actions/upload-artifact@v4
        with:
          name: web-dist
          path: client/tempoforge-web/dist
