name: Build, Test & Deploy

on:
  push:
    branches: main
  pull_request:
    branches: main

jobs:
  build-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore
        run: dotnet restore

      - name: Build solution
        run: dotnet build TempoForge.sln --configuration Release --no-restore

      - name: Run backend tests
        env:
          TESTCONTAINERS_RYUK_DISABLED: "true"
          ASPNETCORE_ENVIRONMENT: Test
          DOTNET_ENVIRONMENT: Test
        run: |
          mkdir -p TestResults
          dotnet test TempoForge.sln --no-build --configuration Release --verbosity normal \
            --logger "trx;LogFileName=backend-tests.trx" \
            --results-directory TestResults

      - name: Upload backend test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-results
          path: TestResults/backend-tests.trx

      - name: Publish backend test results
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: Backend Tests
          path: TestResults/backend-tests.trx
          reporter: dotnet-trx

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Frontend tests
        working-directory: client/tempoforge-web
        run: |
          corepack enable
          pnpm install --frozen-lockfile
          pnpm test -- --ci

  deploy:
    needs: build-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Install Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy API
        run: |
          cd server/TempoForge.Api
          flyctl deploy --app tempoforge-api --remote-only

      - name: Deploy Web
        run: |
          cd client/tempoforge-web
          flyctl deploy --app tempoforge-web --remote-only
